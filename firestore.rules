rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper functions
    function isAdmin() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role.lower() == 'admin';
    }

    function isFaculty() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role.lower() == 'faculty';
    }

    function isParent() {
        return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role.lower() == 'parent';
    }

    // Announcements: anyone can read, only admins can write
    match /announcements/{docId} {
      allow read: if true;
      allow write: if isAdmin();
    }

    // Admins can read and write all other data
    match /{document=**} {
      allow read, write: if isAdmin();
    }

    // Users can read their own profile
    match /users/{userId} {
      allow read: if request.auth.uid == userId;
    }

    // Rules for courses
    match /courses/{courseId} {
        allow read, update: if isFaculty() && (
          request.auth.uid in resource.data.teacherIds ||
          courseId in get(/databases/$(database)/documents/faculty/$(request.auth.uid)).data.courses
        );
        // Parents can read courses their children are enrolled in.
        allow read: if isParent() && exists(/databases/$(database)/documents/students/$(request.auth.uid)) &&
                     courseId in get(/databases/$(database)/documents/students/$(request.auth.uid)).data.enrolledCourses;
    }

    // Rules for students
    match /students/{studentId} {
        // Teachers can read student data IF that student is enrolled in a course the teacher manages.
        allow read: if isFaculty() &&
                       'teacherProfile' in get(/databases/$(database)/documents/users/$(request.auth.uid)).data &&
                       'classesManaged' in get(/databases/$(database)/documents/users/$(request.auth.uid)).data.teacherProfile &&
                       'enrolledCourses' in resource.data &&
                       get(/databases/$(database)/documents/users/$(request.auth.uid)).data.teacherProfile.classesManaged.toSet().intersection(resource.data.enrolledCourses.toSet()).size() > 0;

        // Parents can read their own children's data, assuming a 'parents' collection with a 'children' (UID list) field.
        allow read: if isParent() && studentId in get(/databases/$(database)/documents/parents/$(request.auth.uid)).data.children;
    }

    // Allow users to read their own faculty doc
    match /faculty/{facultyId} {
      allow read: if request.auth.uid == facultyId;
    }
  }
} 